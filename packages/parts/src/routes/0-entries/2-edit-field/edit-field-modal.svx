<script lang="ts">
  import EditField from '$lib/entries/EditField.svelte';
  import EditFieldModal from '$lib/entries/EditFieldModal.svelte';

  import Input from '$lib/entries/keyboards/keyman/Input.svelte';
  import Keyman from '$lib/entries/keyboards/keyman/Keyman.svelte';
  import { Story } from 'kitbook';
  import ShowHide from 'svelte-pieces/functions/ShowHide.svelte';
  import Button from 'svelte-pieces/ui/Button.svelte';

  let value = '';
</script>

<!-- prettier-ignore -->
# Edit Field Modal

<Story name="lexeme">
  <EditField t={undefined} value="banana" field="lx" />
</Story>

<Story name="gloss language with keyboard">
  <EditField t={undefined} value="should have keyboard icon" field="gl" />
</Story>

<!-- <Story name="Sompeng-Mardir">
  <EditField t={undefined} display="Sompeng-Mardir" value="Sompeng" field="gl" />
</Story> -->

<Story name="italicized gloss">
  <EditField t={undefined} value="red <i>tomato</i>" field="gl" />
</Story>

<Story name="interlinear">
  <EditField t={undefined} value="3p.sÉ¢.ind" field="in" />
</Story>

<Story name="notes">
  <EditField t={undefined} value="hello" field="nt" />
</Story>

<Story name="modal">
  <ShowHide let:show let:toggle>
    <Button onclick={toggle}>Show Modal</Button>
    {#if show}
      <EditFieldModal on:close={toggle} t={undefined} display="Keyman test" value="hello" field="gl" />
    {/if}
  </ShowHide>
</Story>

<!-- <Story
  name="input"
  knobs={{ bcp: 'am', showKeyboard: false }}
  let:props={{ bcp, showKeyboard }}
  let:set>
  Set different bpc47 codes to see different keyboards:

  {#each Object.keys(glossingLanguages) as language}
    {#if glossingLanguages[language].showKeyboard}
      <Button form="menu" size="sm" onclick={() => set('bcp', language)} active={language === bcp}
        >{glossingLanguages[language].vernacularName} ({language})</Button>
    {/if}
  {/each}
  <div>Value: {value}</div>
  <Keyman>
    <Input {bcp} {showKeyboard} bind:value />
  </Keyman>
  Has no keyboard:
  <Button form="menu" size="sm" onclick={() => set('bcp', 'en')} active={'en' === bcp}
    >English (en)</Button>
</Story> -->
