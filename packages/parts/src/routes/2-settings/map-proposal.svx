<script lang="ts">
  import { Story } from 'kitbook';
  import MultipleMarkers from '$lib/maps/MultipleMarkers.svelte';
  import ShowHide from 'svelte-pieces/functions/ShowHide.svelte';
  import Button from 'svelte-pieces/ui/Button.svelte';
</script>

<!-- prettier-ignore -->
# Mapbox proposal for multiple markers

**In this proposal deletion of multi-markers works as stack data structures work (FILO): The first marker is the last to be deleted. Except for markers with default popups, please read the description to know how to delete those ones.**

We can allow the normal single marker behaviour we already have on our site, but also with an additional use of multi-markers.

<Story name="Toggle single to multi">
  <ShowHide let:show let:toggle>
    <Button onclick={toggle}>Add Coordinates</Button>
    {#if show}
    <MultipleMarkers markersConfig={{scale: 1.0, draggable: true, color: '#359cd0'}} on:close={toggle} />
    {/if}
  </ShowHide>
</Story>

We also can change some configuration of the pins for more specifical uses when using mult-markers, like `scale`, if the pins are `draggable` and the `color` of pins.

<Story knobs={{scale: 1.0, draggable: true, color: '#0d8529'}} let:props={{scale, draggable, color}} name="Config markers">
  <ShowHide let:show let:toggle>
    <Button onclick={toggle}>Add Coordinates</Button>
    {#if show}
    <MultipleMarkers onlyMultiMarkers markersConfig={{ color, scale, draggable }} on:close={toggle} />
    {/if}
  </ShowHide>
</Story>

## Markers with Popups

<Story name="Default popups">
  <ShowHide let:show let:toggle>
    <Button onclick={toggle}>Add Coordinates</Button>
    {#if show}
    <MultipleMarkers onlyMultiMarkers allowPopup markersConfig={{scale: 1.0, draggable: true, color: '#359cd0'}} on:close={toggle} />
    {/if}
  </ShowHide>
</Story>

<Story name="Popups with customize text">
  <ShowHide let:show let:toggle>
    <Button onclick={toggle}>Add Coordinates</Button>
    {#if show}
    <MultipleMarkers onlyMultiMarkers allowPopup allowText markersConfig={{scale: 1.0, draggable: true, color: '#359cd0'}} on:close={toggle} />
    {/if}
  </ShowHide>
</Story>